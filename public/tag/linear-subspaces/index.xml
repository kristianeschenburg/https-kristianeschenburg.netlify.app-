<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linear subspaces | A Rambling On</title>
    <link>/tag/linear-subspaces/</link>
      <atom:link href="/tag/linear-subspaces/index.xml" rel="self" type="application/rss+xml" />
    <description>linear subspaces</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 29 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/Bayes.jpg</url>
      <title>linear subspaces</title>
      <link>/tag/linear-subspaces/</link>
    </image>
    
    <item>
      <title>submet</title>
      <link>/project/submet/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/project/submet/</guid>
      <description>&lt;p&gt;See my 
&lt;a href=&#34;/post/comparing-subspaces/&#34;&gt;post&lt;/a&gt; with a brief algorithmic introduction for computing distances between pairs of subspaces.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;submet&lt;/code&gt; is a Python package for computing pairwise distances between equidimensional subspaces.  All of these subspace metrics are dependent on the principle angles between the two subspaces.  &lt;code&gt;submet&lt;/code&gt; implements an 
&lt;a href=&#34;&#34;&gt;sklearn&lt;/a&gt;-styled interface with a fitting method via a class called &lt;code&gt;SubspaceDistance&lt;/code&gt;, along with a variety of metrics in a class called &lt;code&gt;Metric&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import submet

# generate random subspaces
s1 = np.random.rand((10, 2))
s2 = np.random.rand((10, 2))

# instantiate SubspaceDistance object, using the Grassmann distance metric
S = submet.subspaces.SubspaceDistance(metric=&#39;Grassmann&#39;)

# compute the distance between two subspaces
S.fit(s1, s2)

# print computed distance
print(S.distance_)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Metric&lt;/code&gt; implements the following distance metrics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Asimov&lt;/li&gt;
&lt;li&gt;Binet-Cauchy&lt;/li&gt;
&lt;li&gt;Chordal&lt;/li&gt;
&lt;li&gt;Fubini-Study&lt;/li&gt;
&lt;li&gt;Martin&lt;/li&gt;
&lt;li&gt;Procrustes&lt;/li&gt;
&lt;li&gt;Projection&lt;/li&gt;
&lt;li&gt;Spectral&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SubspaceDistance&lt;/code&gt; does not currently support pairwise distance computations between more than a single pair of subspaces, in an analogous way to 
&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scipy&amp;rsquo;s&lt;/a&gt; 
&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.pdist.html#scipy.spatial.distance.pdist&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pdist&lt;/a&gt; or 
&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.cdist.html#scipy.spatial.distance.cdist&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cdist&lt;/a&gt; methods.  I am working on allowing pairwise computations using 
&lt;a href=&#34;https://numba.pydata.org/numba-doc/0.11/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;numba&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update as of 6/30/2020: the above issue has been fixed and &lt;code&gt;submet&lt;/code&gt; now allows for pairwise distance matrix computations, rather than only single subspace pair comparisons.  See this 
&lt;a href=&#34;https://github.com/kristianeschenburg/submet/pull/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
